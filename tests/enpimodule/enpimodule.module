<?php
//include_once "sites/all/modules/enpimodule/dbmng_cfg.php";
/*
//******************************************************************************
// DBMng_Connect_DB
// ====================
// Connessione al Database
//******************************************************************************
function DBMng_Connect_DB()
{  
	$link = mysql_connect(DBMNG_DB_HOST, DBMNG_DB_USER, DBMNG_DB_PASS);
	if (!$link) {
	    die('Could not connect to MySQL server: ' . mysql_error());
	}
	mysql_select_db(DBMNG_DB_NAME, $link); 
	
	return( $link );
}

//******************************************************************************
// DBMng_Close
// ====================
// Chiusura della connessione
//******************************************************************************
function DBMng_QueryClose( $link, $result )
{
	if( !($result === false) )
		mysql_free_result( $result );
	if( !($link === false) )
		mysql_close( $link );
}

//******************************************************************************
// DBMng_Connect_DB
// ====================
// Esegue la query
// Parametri:
// * $SQL    : query da eseguire
// * $aFields: array contenente la struttura della tabella
// * $link   : link al database
// * $Errors : errori
//
// Valore di ritorno
// $nData    : recordset
//******************************************************************************
function	DBMng_QueryStart( $SQL, &$aFields, &$link, &$Errors )
	{
	$Errors = "";
	$result = false;
	$link    = DBMng_Connect_DB();
		if( $link === false )
			$Errors .= "UNABLE TO CONNECT TO '$gMyHOST' AS '$gMyUSER'";
		else
			{
			$result = mysql_query( $SQL );
				if( $result === false )
					$Errors .= "QUERY ERROR:<br />" . $SQL . ":<br /> <br />" . mysql_error();
				else
					{
					$nFields = mysql_num_fields( $result );
						for( $ind = 0; $ind < $nFields; $ind++ )
							{
							$aFields[$ind] = array( mysql_field_name( $result, $ind ), mysql_field_type( $result, $ind ) );
							}
					}
			}
	return( $result );
	}

//******************************************************************************
// DBMng_Query
// ====================
// Esegue la query
//******************************************************************************
function	DBMng_Query( $SQL, &$Errors, &$aTRC = null )
{
	$result = DBMng_QueryStart( $SQL, $aFields, $link, $Errors );
	DBMng_QueryClose( $link, $result );
		if( isset($aTRC) )
		{
			$nTRC = count($aTRC);
			$aTRC[$nTRC++] = array( $SQL, $Errors );
		}
}

//******************************************************************************
// DBMng_Dlookup
// ====================
// Ritorna il primo valore della query
// Parametri:
// * $sTable : tabella
// * $sField : campo
// * $sFilter: filtro
//
// Valore di ritorno
// $val      : valore del campo
//******************************************************************************
function DBMng_Dlookup($sTable, $sField, $sFilter)
{
	$link    = DBMng_Connect_DB();
	
	if( strlen($sFilter) == 0 )
		$SQL = 'select distinct ' . $sField . ' from ' . $sTable;
	else
		$SQL = 'select distinct ' . $sField . ' from ' . $sTable . ' where ' . $sFilter;
	
	
	$result  = mysql_query($SQL) or die('Error in query: ' . $SQL . '<br />');
	$val     = mysql_fetch_array( $result, MYSQL_BOTH );
	
	DBMng_QueryClose( $link, $result );
	
	return( $val[0] ); 
}

/////////////////////////////////////////////////////////////////////////////
// DBMng_QueryData
// ====================
// Carica il risultato di una query in un array
function	DBMng_QueryData( $SQL, &$aData, $bShowError, $sSelMsg = null, $nPageLen = null, $nPageNum = null )
	{
	global		$gLayoutHTML;
	
	$aData   = array();
	$nData   = 0;
		if( isset($sSelMsg) && strpos($sSelMsg,"=") !== false )
			{
			$aData[$nData++] = explode( "=", $sSelMsg );
			// Layout_Debug( "sSelMsg = '$sSelMsg' ==> [$nData] = " . $aData[0][0] . ", " . $aData[0][1] );
			}
	$Errors  = "";
	$result  = DBMng_QueryStart( $SQL, $aFields, $link, $Errors );
		if( !($result === false) )
			{
			$nFields = count( $aFields );
			$nPageNum = (isset($nPageNum) ? $nPageNum : 0);
			$nBData   = $nPageNum * $nPageLen;
			$nEData   = $nBData + $nPageLen;
			$nStore   = 0;
				while( $qRow = mysql_fetch_array( $result, MYSQL_BOTH ) )
					{
						for( $k = 0; $k < $nFields; $k++ )
							{
							$qRow[$k] = trim($qRow[$k]);
							}
						if( ($nData >= $nBData && $nData <= $nEData) || ! isset($nPageLen) )
							{
							//	if( isset($nPageLen) && isset($nPageNum) && $nPageLen > 0 )
							//		Layout_Debug( "AutoDBMng_Data2Array: $nData/$nStore = " . $qRow[0] );
							$nStore++;
							$aData[$nData++] = $qRow;
							}
						else
							$aData[$nData++] = array();
					}
				if( $_SERVER['SERVER_NAME'] == 'localhost' )
					{
					$gLayoutHTML .= "\n<!-- $SQL\n";
						for( $iFld = 0; $iFld < $nFields; $iFld++ )
							{
							$gLayoutHTML .= sprintf( "[%02d] = %s (%s)\n", $iFld, $aFields[$iFld][0], $aFields[$iFld][1] );
							}
					$gLayoutHTML .= "nData = $nData\n";
					$gLayoutHTML .= "-->\n";
					}
			}
	DBMng_QueryClose( $link, $result );
		if( $bShowError && $Errors != "" )
			echo $Errors;
		if( $Errors != "" )
			$nData = -1;
	// echo "\n<!-- $SQL ==> $nData -->\n";
	//	if( isset($nPageLen) && isset($nPageNum) && $nPageLen > 0 )
	//		Layout_Debug( "AutoDBMng_Data2Array: $nStore = $nBData - $nEData" );
	return( $nData );
	}
	
*/










//******************************************************************************
// Drupal Module 
// ====================
// Query
//******************************************************************************
function enpimodule_block_info() {
$blocks = array();
$blocks['last_item'] = array(
'info' => t('Last item'),
);

return $blocks;
}

function enpimodule_block_view($delta='') {
$block = array();

switch($delta) {
case 'last_item' :
$block['content'] = last_item_view();
break;
}

return $block;
}

function last_item_view() {
$html='';
$result = db_query('SELECT distinct id_test, nome FROM test order by nome desc ');
	$html.='<ul>';
		foreach ($result as $record) {
			$html.='<li><a href="?update_id_test=' . $record->id_test . '">' . $record->nome . '</li>';
		}
	$html.='</ul>';
return $html;
}

function enpimodule_menu() {
    $items = array();

    $items['enpimodule/hello'] = array(
        'title' => 'Hello World Test',
        'page callback' => 'say_hello_world',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );

		 $items['enpimodule/hello/insert'] = array(
        'title' => 'Hello World Insert',
        'page callback' => 'say_hello_world_insert',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );

    return $items;
}

function say_hello_world() {

		$table = 'test';
		
		$html  = t('Document page');

		if(isset($_POST['nome'])){
			// aggiornamento record esistente
			if(isset($_POST['update_record'])){
				$result = db_query('update ' . $table . ' set nome=:nome, eta=:eta WHERE id_test=:id_test', 
					array( 
						':nome' => $_POST['nome'] ,
						':eta' => intval($_POST['eta']), 
						':id_test' => intval($_POST['update_record'])
					)
				);
			}
			else{ //inserimento nuovo record
				$result = db_query('insert into ' . $table . ' (nome, eta) values (:nome, :eta)', 
					array( 
						':nome' => $_POST['nome'] ,
						':eta' => intval($_POST['eta']) 
					)
				);
			}
		}
		
		// delete record
		if(isset($_REQUEST['delete_id_test'])){				
			$result = db_query('delete from ' . $table . ' WHERE id_test=:id_test', 
				array( 
					':id_test' => intval($_REQUEST['delete_id_test'])
				)
			);
		}

		// delete record
		if(isset($_REQUEST['duplicate_id_test'])){				
			$result = db_query('insert into ' . $table . ' (nome, eta) select nome, eta from ' . $table . ' WHERE id_test=:id_test', 
				array( 
					':id_test' => intval($_REQUEST['duplicate_id_test'])
				)
			);
		}
		
		$sql = 'select * from ' . $table;
		$result = db_query($sql);
    
    $html .= '<table><tr><th>' . t('id_test') . '</th><th>' . t('name') . '</th><th>' . t('age') . '</th><th>' . t('functions') . '</th></tr>';

		foreach ($result as $record) {
			$html .= '<tr><td>' . $record->id_test . '</td><td>' . $record->nome.'</td><td>' . $record->eta . '</td>';

			$html .= '<td>';
				$html .= '<a href="?delete_id_test=' . $record->id_test.'">' . t('Delete') . '</a>' . '&nbsp;';
				$html .= '<a href="?update_id_test=' . $record->id_test . '">' . t('Update') . '</a>' . '&nbsp;';
				$html .= '<a href="?duplicate_id_test=' . $record->id_test . '">' . t('Duplicate') . '</a>';
			$html .= '</td>';
			
			$html .= '</tr>';
		}
    $html .= '</table>';
		
		$html .= '<a href="?insert_new=1">' . t('Insert new data') . '</a><br />';

		$nome_val       = '';
		$eta_val        = '';
		$update_id_test = '';

		if(isset($_REQUEST['update_id_test'])){
			$result = db_query('select * from ' . $table . ' where id_test=:id_test', array(':id_test' => intval($_REQUEST['update_id_test'])) );
	    foreach ($result as $record) {
           $nome_val       = $record->nome;
           $eta_val        = $record->eta;
           $update_id_test = $record->id_test;
			}
		}
	
		// form per inserimento e modifica
    if( isset($_GET['insert_new']) || isset($_GET['update_id_test']) ){
	    $html .= '<form method="POST" action="?" >';
			$html .= t('Name') . ': <input name="nome" value="' . $nome_val . '" /><br />';
			$html .= t('Age') . ': <input name="eta" value="' . $eta_val . '" /><br />';
			if($update_id_test!=''){
				$html .= '<input type="hidden" name="update_record" value="'.$update_id_test.'" />';
				$html .= '<input type="submit" value="'. t('Update') .'" />';
			}
			else{
				$html .= '<input type="submit" value="' .t('Insert') .'" />';
			}
	    $html .= '</form>';
    }
		
		$html .= "<br /><br />\n";
		
		/*
		// array che deve essere generato dinamicamente
		$aFormS = array();
		$aFormS['nome'] = array('label' => 'Name', 'type' => 'text', 'default' => '', 'value' => "Michele");
		$aFormS['eta'] = array('label' => 'Age', 'type' => 'number', 'default' => '', 'value' => null);

		$aForm= array(				
				'table_name' => 'test',
				'primary_key' => 'id_test',
				'fields' => array(
					array(
							'field_name' => 'name',
							'field_label' => 'Nome',
							'field_type' => 'text',
						),
					array(
							'field_name' => 'eta',
							'field_label' => 'Et&agrave',								
							'field_type' => 'text'
						),
				)
			);
		*/
		
		$aForm = array();
		$fields = db_query("select * from dbmng_fields where id_table=1 order by field_order ASC");
		foreach ($fields as $fld)
		{
			$sType = "";
			switch( $fld->id_field_type )
			{
				case "varchar":
					$sType = "text";
					break;

				case "int":
					$sType = "text";
					break;
				
				default:
					$sType = "text";
			}
			
			$aForm[$fld->field_name] = array('label' => $fld->field_label, 'type' => $sType, 'default' => $fld->default_value, 'value' => null);
		}

		// ----> inizio funzione
    $html .= "<form method='POST' action='?' >\n";
		foreach ( $aForm as $x => $x_value )
		{
			$html .= t($x_value['label']);
			$html .= "<input name='".$x."' ";
			$html .= "type='".$x_value['type']."' ";
			if( $x_value['value'] == null )
				$html .= "value='" . $x_value['default'] . "' ";
			else
				$html .= "value='" . $x_value['value'] . "' ";
			$html .= "><br />\n";
						
		}
		$html .= "<input type='submit' value='" .t('Insert') . "' />\n";
    $html .= "</form>\n";
		// fine funzione

    return ($html);

}


function say_hello_world_insert() {
		$html=t('This is a new page for insert');
    return ($html);
}
